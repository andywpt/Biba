
platform :ios do
 desc "Load the App Store Connect API token to use in other fastlane tools and actions"
 lane :load_app_store_connect_api_key do
   app_store_connect_api_key(
     key_id: ENV["APPSTORE_API_KEY_ID"],
     issuer_id: ENV["APPSTORE_API_ISSUER_ID"],
     key_content: ENV["APPSTORE_API_PRIVATE_KEY"],
     is_key_content_base64: true
   )
 end
 
 desc "Increment TestFlight build number"
 lane :update_build_number do
   app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

   current_version = get_version_number()
   latest_build_number = latest_testflight_build_number(
     version: current_version,
     app_identifier: app_identifier
   )
   increment_build_number(
     build_number: (latest_build_number + 1),
   )
 end

 desc "Install distribution certificate in the keychain"
 lane :install_distribution_certificate do
     
   keychain_name = "signing"
   keychain_password = ""
   
   delete_keychain(
     name: keychain_name
   ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

   create_keychain(
     name: keychain_name,
     password: keychain_password,
     default_keychain: true,
     unlock: true,
     timeout: 0,
     require_create: true
   )

   import_certificate(
     certificate_path: ENV["APPLE_CERTIFICATE"],
     certificate_password: ENV["APPLE_CERTIFICATE_PASSWORD"],
     keychain_name: keychain_name,
     keychain_password: keychain_password,
     log_output: true
   )
 end
 
 desc "download provisioning profile"
 lane :install_provision_profile do |options|
     sigh(app_identifier: "*", readonly: true)
     p "Provisioning profile: #{lane_context[SharedValues::SIGH_NAME]}"
 end

 desc "Build the iOS app for release"
 lane :build_release do
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    provision_profile_name = lane_context[SharedValues::SIGH_NAME]
    update_code_signing_settings(code_sign_identity: "Apple Distribution")
    # build the app
    gym(
        scheme: "Biba",
        output_name: "biba.ipa",
        configuration: "Release",
        export_method: "app-store",
        export_options: {
            testFlightInternalTestingOnly: true,
            provisioningProfiles: {
                "com.biba": provision_profile_name
            }
        }
    )
end

 desc "Upload to TestFlight"
 lane :upload_to_test_flight do
    deliver(
        skip_screenshots: true,
        skip_metadata: true,
        skip_app_version_update: true,
        force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
        run_precheck_before_submit: false # not supported through ASC API yet
    )
 end
    
 desc "Build and upload to TestFlight"
 lane :build_upload_testflight do
    load_app_store_connect_api_key
    update_build_number
    install_distribution_certificate
    install_provision_profile
    #build_release
    #upload_to_test_flight
 end
end
