
opt_out_usage

platform :ios do
 desc "Load App Store Connect API token"
 lane :load_asc_api_key do
   app_store_connect_api_key(
     key_id: ENV["APPSTORE_API_KEY_ID"],
     issuer_id: ENV["APPSTORE_API_ISSUER_ID"],
     key_content: ENV["APPSTORE_API_PRIVATE_KEY"],
     is_key_content_base64: true,
     in_house: false
   )
 end
 
 desc "Increment TestFlight build number"
 lane :fetch_and_increment_build_number do
    
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    current_version = get_version_number()
    latest_build_number = latest_testflight_build_number(
        version: current_version,
        app_identifier: app_identifier
    )
    increment_build_number(
        build_number: (latest_build_number + 1),
    )
 end

 desc "Installs signing certificate in the keychain and downloads provisioning profiles from App Store Connect"
 lane :prepare_signing do |options|
     
   keychain_name = "signing"
   keychain_password = "temp"

   delete_keychain(
     name: keychain_name
   ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

   create_keychain(
     name: keychain_name,
     password: keychain_password,
     default_keychain: true,
     unlock: true,
     require_create: true
   )

   import_certificate(
     certificate_path: ENV["APPLE_CERTIFICATE"],
     certificate_password: ENV["APPLE_CERTIFICATE_PASSWORD"],
     keychain_name: keychain_name,
     keychain_password: keychain_password
   )
  
   # download the corresponding provisioning profile, renew it if expired
   sigh(app_identifier: "*", readonly: true)
   profile_name = lane_context[SharedValues::SIGH_NAME]
 end

 desc "Build the iOS app for release"
 lane :build_release do |options|
     
    output_name = "biba.ipa" # specify the name of the .ipa file to generate
    
    update_code_signing_settings(
        use_automatic_signing: false,
        code_sign_identity: "Apple Distribution"
    )

    # build the app
    gym(
        scheme: "Biba",
        output_name: output_name,
        configuration: "Release",
        export_method: "app-store",
        export_options: {
            testFlightInternalTestingOnly: true,
            # provisioningProfiles: {
               # app_identifier => "DistributeAllApps"
            # }
        }
    )
end

 desc "Upload to TestFlight"
 lane :upload_release do
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    deliver(
        api_key: api_key,
        skip_screenshots: true,
        skip_metadata: true,
        skip_app_version_update: true,
        force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
        run_precheck_before_submit: false # not supported through ASC API yet
    )
 end
    
 desc "Build and upload to TestFlight"
 lane :build_upload_testflight do
    load_asc_api_key
    fetch_and_increment_build_number
    prepare_signing
    build_release
    upload_release
 end
end
